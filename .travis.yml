env:
  global:
    - E2D_WITHOUT_AUDIO=true
    - E2D_WITHOUT_GRAPHICS=true

language: cpp

jobs:
  include:

    #
    # linux (g++)
    #

    - os: linux
      dist: bionic
      stage: linux
      name: g++-7
      addons: { apt: { sources: ["ubuntu-toolchain-r-test"], packages: ["libx11-dev", "libgl1-mesa-dev", "xorg-dev", "g++-7"] } }
      env: CC=gcc-7 CXX=g++-7
      script: .ci/builds/build_linux.sh

    - os: linux
      dist: bionic
      stage: linux
      name: g++-8
      addons: { apt: { sources: ["ubuntu-toolchain-r-test"], packages: ["libx11-dev", "libgl1-mesa-dev", "xorg-dev", "g++-8"] } }
      env: CC=gcc-8 CXX=g++-8
      script: .ci/builds/build_linux.sh

    #
    # linux (clang++)
    #

    - os: linux
      dist: bionic
      stage: linux
      name: clang++-5.0
      addons: { apt: { sources: ["ubuntu-toolchain-r-test"], packages: ["libx11-dev", "libgl1-mesa-dev", "xorg-dev", "clang-5.0"] } }
      env: CC=clang-5.0 CXX=clang++-5.0
      script: .ci/builds/build_linux.sh

    - os: linux
      dist: bionic
      stage: linux
      name: clang++-6.0
      addons: { apt: { sources: ["ubuntu-toolchain-r-test"], packages: ["libx11-dev", "libgl1-mesa-dev", "xorg-dev", "clang-6.0"] } }
      env: CC=clang-6.0 CXX=clang++-6.0
      script: .ci/builds/build_linux.sh

    #
    # darwin
    #

    - os: osx
      osx_image: xcode10
      stage: darwin
      name: xcode10
      addons: { homebrew: { packages: ["git-lfs"], update: true } }
      script: .ci/builds/build_darwin.sh

    - os: osx
      osx_image: xcode11
      stage: darwin
      name: xcode11
      addons: { homebrew: { packages: ["git-lfs"], update: true } }
      script: .ci/builds/build_darwin.sh

    #
    # coverage
    #

    - os: osx
      osx_image: xcode10
      stage: coverage
      name: coverage, xcode10
      addons: { homebrew: { packages: ["git-lfs", "lcov"], update: true } }
      script: .ci/builds/build_coverage.sh

before_script:
  - git submodule update --init --recursive
  - git lfs install
  - git lfs pull
